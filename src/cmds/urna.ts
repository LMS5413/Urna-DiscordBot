import { ActionRowBuilder, ButtonBuilder, ButtonStyle, CommandInteraction, EmbedBuilder } from "discord.js";
import { NewClient } from "../types/Client";

module.exports = {
    name: 'urna',
    description: 'Votação para um presidente',
    run: async (client: NewClient, interaction: CommandInteraction) => {
        const row1 = new ActionRowBuilder<ButtonBuilder>()
            .addComponents(new ButtonBuilder()
                .setLabel('1')
                .setCustomId('1')
                .setStyle(ButtonStyle.Secondary)
            )
            .addComponents(new ButtonBuilder()
                .setLabel('2')
                .setCustomId('2')
                .setStyle(ButtonStyle.Secondary)
            )
            .addComponents(new ButtonBuilder()
                .setLabel('3')
                .setCustomId('3')
                .setStyle(ButtonStyle.Secondary)
            )
            const row2 = new ActionRowBuilder<ButtonBuilder>()
            .addComponents(new ButtonBuilder()
                .setLabel('4')
                .setCustomId('4')
                .setStyle(ButtonStyle.Secondary)
            )
            .addComponents(new ButtonBuilder()
                .setLabel('5')
                .setCustomId('5')
                .setStyle(ButtonStyle.Secondary)
            )
            .addComponents(new ButtonBuilder()
                .setLabel('6')
                .setCustomId('6')
                .setStyle(ButtonStyle.Secondary)
            )
            const row3 = new ActionRowBuilder<ButtonBuilder>()
            .addComponents(new ButtonBuilder()
                .setLabel('7')
                .setCustomId('7')
                .setStyle(ButtonStyle.Secondary)
            )
            .addComponents(new ButtonBuilder()
                .setLabel('8')
                .setCustomId('8')
                .setStyle(ButtonStyle.Secondary)
            )
            .addComponents(new ButtonBuilder()
                .setLabel('9')
                .setCustomId('9')
                .setStyle(ButtonStyle.Secondary)
            )
            const row4 = new ActionRowBuilder<ButtonBuilder>()
            .addComponents(new ButtonBuilder()
                .setLabel('Branco')
                .setCustomId('white')
                .setStyle(ButtonStyle.Primary)
            )
            .addComponents(new ButtonBuilder()
                .setLabel('Corrige')
                .setCustomId('rewrite')
                .setStyle(ButtonStyle.Danger)
            )
            .addComponents(new ButtonBuilder()
                .setLabel('Confirma')
                .setCustomId('confirm')
                .setStyle(ButtonStyle.Success)
            )
            const votes = client.vote.get(interaction.user.id)
            const embed = new EmbedBuilder()
                .setTitle('Justiça eleitoral Brasileira (Simulador)')
                .setDescription(`Deputado federal \n \nInsere o número`)
            const msg = await interaction.reply({embeds: [embed], components: [row1, row2, row3, row4], fetchReply: true});
            if (!votes) {
                client.vote.set(interaction.user.id, {msgid: msg.id, number: "", type: "deputado federal", infos: []})
            }
    }
}